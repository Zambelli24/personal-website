{"version":3,"file":"109.e356b4ce8e2cc65a.js","mappings":"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","names":["DeviceFrameComponent","getFrameSource","project","image","frameType","this","_addFrameClass","document","getElementById","_getElementKey","name","index","classList","add","projectName","type","t","core","Xpm","selectors","inputs","standalone","features","i0","decls","vars","consts","template","rf","ctx","link","source","BoundAthleteProject","description","technologies","TECHNOLOGIES","AWS","CSS","DOCKER","GIT","GITHUB","HTML","JAVASCRIPT","NODEJS","NPM","REACT","PYTHON","SCSS","SLACK","images","logo","key","responsibilities","ProjectsService","constructor","_projects","Object","keys","projects","map","Yz7","factory","Éµfac","providedIn","project_r1","image_r5","i_r6","resp_r8","tech_r9","icon","PortfolioComponent_div_0_ng_container_7_Template","PortfolioComponent_div_0_li_18_Template","PortfolioComponent_div_0_ng_container_22_Template","PortfolioComponent","projectsService","i1","PortfolioComponent_div_0_Template","CommonModule","i2","IconComponent","styles"],"sourceRoot":"webpack:///","sources":["./src/app/shared/components/device-frame.component.ts","./src/app/shared/components/device-frame.component.html","./src/app/projects/bound-athlete.ts","./src/app/services/projects.service.ts","./src/app/portfolio/portfolio.component.html","./src/app/portfolio/portfolio.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { IProject, IProjectImage } from 'src/app/projects/project.interface';\n\n@Component({\n  selector: 'app-device-frame',\n  templateUrl: './device-frame.component.html',\n  styleUrls: ['./device-frame.component.scss'],\n  standalone: true,\n})\nexport class DeviceFrameComponent {\n  @Input() image: IProjectImage;\n  @Input() index: number;\n  @Input() project: IProject;\n\n  getFrameSource(project: IProject, image: IProjectImage): string {\n    if (image.frameType === 'laptop') {\n      this._addFrameClass(project, image);\n      return 'assets/frames/macbook.png';\n    } else if (image.frameType === 'tablet') {\n      this._addFrameClass(project, image);\n      return 'assets/frames/ipad.png';\n    } else {\n      this._addFrameClass(project, image);\n      return 'assets/frames/iphone.png';\n    }\n  }\n\n  private _addFrameClass(project: IProject, image: IProjectImage): void {\n    document.getElementById(this._getElementKey(project.name, this.index, 'frame'))?.classList.add(image.frameType);\n    document.getElementById(this._getElementKey(project.name, this.index, 'content'))?.classList.add(image.frameType);\n  }\n\n  private _getElementKey(projectName: string, index: number, type: 'frame' | 'content'): string {\n    if (type === 'frame') {\n      return `${projectName}-image-frame-${index}`;\n    } else {\n      return `${projectName}-image-content-${index}`;\n    }\n  }\n}\n","<a href=\"{{ project.link }}\" target=\"_blank\" rel=\"noopener\">\n  <img id=\"{{ project.name }}-image-frame-{{ index }}\"\n       class=\"frame\"\n       src=\"{{ getFrameSource(project, image) }}\"\n       alt=\"{{ project.name }}-image-{{ index }}-frame\"\n       title=\"{{ project.name }} Image {{ index }} Frame\" />\n  <img id=\"{{ project.name }}-image-content-{{ index }}\"\n       class=\"content\"\n       src=\"{{ image.source }}\"\n       alt=\"{{ project.name }}-image-{{ index }}\"\n       title=\"{{ project.name }} Image {{ index }}\" />\n</a>","import { TECHNOLOGIES } from '../shared/constants/technologies';\nimport { IProject } from './project.interface';\n\nexport const BoundAthleteProject: IProject = {\n  description: 'Bound Athlete is a social networking platform for high school athletes to connect with coaches and other athletes. The goal of the platform is to education student athletes about the recruiting process. The platform serves as their home base for finding the right college to match their desires at the collegiate level.',\n  technologies: [\n    TECHNOLOGIES.AWS,\n    TECHNOLOGIES.CSS,\n    TECHNOLOGIES.DOCKER,\n    TECHNOLOGIES.GIT,\n    TECHNOLOGIES.GITHUB,\n    TECHNOLOGIES.HTML,\n    TECHNOLOGIES.JAVASCRIPT,\n    TECHNOLOGIES.NODEJS,\n    TECHNOLOGIES.NPM,\n    TECHNOLOGIES.REACT,\n    TECHNOLOGIES.PYTHON,\n    TECHNOLOGIES.SCSS,\n    TECHNOLOGIES.SLACK,\n  ],\n  images: [\n    { source: 'assets/projects/bound/bound-3.png', frameType: 'tablet' },\n    { source: 'assets/projects/bound/bound-1.png', frameType: 'mobile' },\n    { source: 'assets/projects/bound/bound-2.png', frameType: 'mobile' },\n    { source: 'assets/projects/bound/bound-4.png', frameType: 'tablet' },\n    { source: 'assets/projects/bound/bound-5.png', frameType: 'laptop' },\n  ],\n  link: 'https://boundathlete.com/',\n  logo: 'assets/projects/bound/bound-athlete.png',\n  key: 'bound-athlete',\n  name: 'Bound Athlete',\n  responsibilities: [\n    'Led all software development and testing',\n    'Managed AWS infrastructure and deployment',\n    'Drove business value through technical solutions',\n    'Leveraged automation and scripting to improve process efficiency',\n    'Enhanced UX continuously to ensure user satisfaction'\n  ],\n}","import { Injectable } from '@angular/core';\nimport { IProject } from '../projects/project.interface';\nimport * as projects from '../projects';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsService {\n  private _projects: IProject[];\n\n  constructor() {\n    this._projects = Object.keys(projects).map(key => (projects as any)[key]);\n  }\n\n  get projects(): IProject[] {\n    return this._projects;\n  }\n}","<div *ngFor=\"let project of projects\" class=\"portfolio-item\">\n  <div class=\"project-header\">\n    <img id=\"{{ project.key }}-logo\" src=\"{{ project.logo }}\" alt=\"{{ project.name }}\" />\n    <h1><a href=\"{{ project.link }}\" target=\"_blank\" rel=\"noopener\">{{ project.name }}</a></h1>\n  </div>\n\n  <div class=\"project-images\">\n    <ng-container *ngFor=\"let image of project.images; index as i\">\n      <app-device-frame [project]=\"project\" [image]=\"image\" [index]=\"i\"></app-device-frame>\n    </ng-container>\n  </div>\n\n  <div class=\"project-details\">\n    <div>\n      <h3>Project Overview</h3>\n      <p>{{ project.description }}</p>\n    </div>\n    <div>\n      <h3>Key Responsibilities</h3>\n      <ul>\n        <li *ngFor=\"let resp of project.responsibilities\">\n          {{ resp }}\n      </ul>\n    </div>\n  </div>\n\n  <h3>Technologies & Languages</h3>\n  <div class=\"technologies\">\n    <ng-container *ngFor=\"let tech of project.technologies\">\n      <app-icon class=\"tech-logo\" [icon]=\"tech.icon\" [tooltip]=\"tech.name\" [inverted]=\"true\"></app-icon>\n    </ng-container>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { ProjectsService } from '../services/projects.service';\nimport { IProject } from '../projects/project.interface';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from '../shared/components/icon.component';\nimport { DeviceFrameComponent } from '../shared/components/device-frame.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-portfolio',\n  templateUrl: './portfolio.component.html',\n  styleUrls: ['./portfolio.component.scss'],\n  imports: [\n    CommonModule,\n    DeviceFrameComponent,\n    IconComponent,\n  ]\n})\nexport class PortfolioComponent {\n  projects: IProject[];\n\n  constructor(protected projectsService: ProjectsService) {\n    this.projects = this.projectsService.projects;\n  }\n}"],"x_google_ignoreList":[]}