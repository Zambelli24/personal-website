{"version":3,"file":"779.026c3953471c33ce.js","mappings":"2PAGO,MAAMA,EAAgC,CAC3CC,YAAa,weACbC,aAAc,CACZC,IAAaC,IACbD,IAAaE,IACbF,IAAaG,OACbH,IAAaI,IACbJ,IAAaK,OACbL,IAAaM,KACbN,IAAaO,WACbP,IAAaQ,OACbR,IAAaS,IACbT,IAAaU,MACbV,IAAaW,OACbX,IAAaY,KACbZ,IAAaa,OAEfC,OAAQ,CACN,oCACA,oCACA,oCACA,oCACA,qCAEFC,KAAM,4BACNC,KAAM,0CACNC,IAAK,gBACLC,KAAM,gBACNC,iBAAkB,CAChB,6CACA,4CACA,oDACA,mEACA,yDC7BG,IAAMC,EAAe,MAAtB,MAAOA,EAGXC,cACEC,KAAKC,UAAYC,OAAOC,KAAKC,GAAUC,IAAIV,GAAQS,EAAiBT,GACtE,CAEIS,eACF,OAAOJ,KAAKC,SACd,EATWH,SAAe,mBAAAQ,iBAAfR,EAAe,EAAfA,EAAe,WAAAS,EAAAC,IAAA,OAAfV,EAAeW,QAAfX,EAAeY,UAAAC,WAFd,SAEDb,CAAe,8BCAxBc,MAAA,QACEA,MAAA,WAGFA,gEAHOA,MAAA,GAAAA,MAAA,MAAAC,EAAAD,OACAA,MAAA,SAAAE,EAAAlB,KAAA,UAAAmB,EAAA,GAAAH,CAAsC,WAAAE,EAAAlB,KAAA,UAAAmB,EAAA,8BAazCH,MAAA,QACEA,MAAA,GADFA,kCACEA,MAAA,GAAAA,MAAA,IAAAI,EAAA,+BAONJ,MAAA,GACEA,MAAA,gBACFA,kCAD8BA,MAAA,GAAAA,MAAA,OAAAK,EAAAC,KAAAN,CAAkB,UAAAK,EAAArB,KAAlBgB,CAAkB,yCA/BpDA,MAAA,QAAAA,CAAoH,WAEhHA,MAAA,WACAA,MAAA,QAAIA,MAAA,GAAkBA,UAGxBA,MAAA,UACEA,MAAA,EAAAO,EAAA,YAKFP,QAEAA,MAAA,UAAAA,CAA6B,QAA7BA,CAA6B,QAErBA,MAAA,uBAAgBA,QACpBA,MAAA,QAAGA,MAAA,IAAyBA,UAE9BA,MAAA,SAAAA,CAAK,SACCA,MAAA,2BAAoBA,QACxBA,MAAA,SACEA,MAAA,GAAAQ,EAAA,YAEFR,YAIJA,MAAA,SAAIA,MAAA,+BAAwBA,QAC5BA,MAAA,YACEA,MAAA,GAAAS,EAAA,sBAGFT,oCAjCyDA,MAAA,OAAAE,EAAArB,KAAAmB,OAElDA,MAAA,GAAAA,MAAA,QAAAE,EAAAnB,IAAA,SAA4BiB,MAAA,MAAAE,EAAApB,KAAAkB,OAAyBA,MAAA,MAAAE,EAAAlB,MACtDgB,MAAA,GAAAA,MAAAE,EAAAlB,MAIkBgB,MAAA,GAAAA,MAAA,UAAAE,EAAAtB,QAUjBoB,MAAA,GAAAA,MAAAE,EAAAtC,aAKoBoC,MAAA,GAAAA,MAAA,UAAAE,EAAAjB,kBAQMe,MAAA,GAAAA,MAAA,UAAAE,EAAArC,aAAA,ECd5B,IAAM6C,EAAkB,MAAzB,MAAOA,EAGXvB,YAAsBwB,GAAAvB,KAAAuB,kBACpBvB,KAAKI,SAAWJ,KAAKuB,gBAAgBnB,QACvC,EALWkB,SAAkB,mBAAAhB,iBAAlBgB,GAAkBV,MAAAY,GAAA,EAAlBF,EAAkB,UAAAf,EAAAkB,IAAA,MAAlBH,EAAkBI,UAAA,oBAAAC,YAAA,EAAAC,SAAA,CAAAhB,OAAAiB,MAAA,EAAAC,KAAA,EAAAC,OAAA,kWAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GDhB/BrB,MAAA,EAAAuB,EAAA,iBAAuBvB,MAAA,UAAAsB,EAAA9B,yBCYnBgC,KAAYC,KACZC,KAAaC,OAAA,6pEAGJjB,CAAkB","names":["BoundAthleteProject","description","technologies","TECHNOLOGIES","AWS","CSS","DOCKER","GIT","GITHUB","HTML","JAVASCRIPT","NODEJS","NPM","REACT","PYTHON","SCSS","SLACK","images","link","logo","key","name","responsibilities","ProjectsService","constructor","this","_projects","Object","keys","projects","map","t","core","Yz7","factory","Éµfac","providedIn","i0","image_r5","project_r1","i_r6","resp_r8","tech_r9","icon","PortfolioComponent_a_0_li_6_Template","PortfolioComponent_a_0_li_17_Template","PortfolioComponent_a_0_ng_container_21_Template","PortfolioComponent","projectsService","i1","Xpm","selectors","standalone","features","decls","vars","consts","template","rf","ctx","PortfolioComponent_a_0_Template","CommonModule","i2","IconComponent","styles"],"sourceRoot":"webpack:///","sources":["./src/app/projects/bound-athlete.ts","./src/app/services/projects.service.ts","./src/app/portfolio/portfolio.component.html","./src/app/portfolio/portfolio.component.ts"],"sourcesContent":["import { TECHNOLOGIES } from '../shared/constants/technologies';\nimport { IProject } from './project.interface';\n\nexport const BoundAthleteProject: IProject = {\n  description: 'My first software development project. I began by assisting one other developer and within a few months I took ownership of all aspects of the development lifecycle. Bound Athlete is a social networking platform for high school athletes to connect with coaches and other athletes. The goal of the platform is to education student athletes about the recruiting process. The platform serves as their home base for finding the right college to match their desires at the collegiate level.',\n  technologies: [\n    TECHNOLOGIES.AWS,\n    TECHNOLOGIES.CSS,\n    TECHNOLOGIES.DOCKER,\n    TECHNOLOGIES.GIT,\n    TECHNOLOGIES.GITHUB,\n    TECHNOLOGIES.HTML,\n    TECHNOLOGIES.JAVASCRIPT,\n    TECHNOLOGIES.NODEJS,\n    TECHNOLOGIES.NPM,\n    TECHNOLOGIES.REACT,\n    TECHNOLOGIES.PYTHON,\n    TECHNOLOGIES.SCSS,\n    TECHNOLOGIES.SLACK,\n  ],\n  images: [\n    'assets/projects/bound/bound-1.png',\n    'assets/projects/bound/bound-2.png',\n    'assets/projects/bound/bound-3.png',\n    'assets/projects/bound/bound-4.png',\n    'assets/projects/bound/bound-5.png',\n  ],\n  link: 'https://boundathlete.com/',\n  logo: 'assets/projects/bound/bound-athlete.png',\n  key: 'bound-athlete',\n  name: 'Bound Athlete',\n  responsibilities: [\n    'Leads all software development and testing',\n    'Manages AWS infrastructure and deployment',\n    'Drives business value through technical solutions',\n    'Leverages automation and scripting to improve process efficiency',\n    'Enhances UX continuously to ensure user satisfaction'\n  ],\n}","import { Injectable } from '@angular/core';\nimport { IProject } from '../projects/project.interface';\nimport * as projects from '../projects';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsService {\n  private _projects: IProject[];\n\n  constructor() {\n    this._projects = Object.keys(projects).map(key => (projects as any)[key]);\n  }\n\n  get projects(): IProject[] {\n    return this._projects;\n  }\n}","<a *ngFor=\"let project of projects\" class=\"portfolio-item\" href=\"{{ project.link }}\" target=\"_blank\" rel=\"noopener\">\n  <div class=\"project-header\">\n    <img id=\"{{ project.key }}-logo\" src=\"{{ project.logo }}\" alt=\"{{ project.name }}\" />\n    <h1>{{ project.name }}</h1>\n  </div>\n\n  <ul class=\"project-images\">\n    <li *ngFor=\"let image of project.images; index as i\">\n      <img src=\"{{ image }}\"\n           alt=\"{{ project.name }}-image-{{ i }}\"\n           title=\"{{ project.name }} Image {{ i }}\" />\n    </li>\n  </ul>\n\n  <div class=\"project-details\">\n    <div>\n      <h3>Project Overview</h3>\n      <p>{{ project.description }}</p>\n    </div>\n    <div>\n      <h3>Key Responsibilities</h3>\n      <ul>\n        <li *ngFor=\"let resp of project.responsibilities\">\n          {{ resp }}\n      </ul>\n    </div>\n  </div>\n\n  <h3>Technologies & Languages</h3>\n  <div class=\"technologies\">\n    <ng-container *ngFor=\"let tech of project.technologies\">\n      <app-icon class=\"tech-logo\" [icon]=\"tech.icon\" [tooltip]=\"tech.name\" [inverted]=\"true\"></app-icon>\n    </ng-container>\n  </div>\n</a>","import { Component } from '@angular/core';\nimport { ProjectsService } from '../services/projects.service';\nimport { IProject } from '../projects/project.interface';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from '../shared/components/icon.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-portfolio',\n  templateUrl: './portfolio.component.html',\n  styleUrls: ['./portfolio.component.scss'],\n  imports: [\n    CommonModule,\n    IconComponent,\n  ]\n})\nexport class PortfolioComponent {\n  projects: IProject[];\n\n  constructor(protected projectsService: ProjectsService) {\n    this.projects = this.projectsService.projects;\n  }\n}"],"x_google_ignoreList":[]}